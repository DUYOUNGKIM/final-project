buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.8'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'

    //querydsl 추가
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.project'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5'
    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation'

    //querydsl 추가
    implementation 'com.querydsl:querydsl-jpa'
    compile("com.querydsl:querydsl-jpa")

    //S3 의존성 추가
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-aws', version: '2.2.1.RELEASE', ext: 'pom'

    // aws-sdk-java-v2 (s3에 Multipart 업로드를 위함)
    implementation platform('software.amazon.awssdk:bom:2.17.53')
    implementation 'software.amazon.awssdk:s3'

    //https://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk
    implementation group: 'com.amazonaws', name: 'aws-java-sdk', version: '1.12.415'

    // 웹 소켓
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    // sockjs
    implementation 'org.webjars:sockjs-client:1.5.1'
    // stomp
    implementation 'org.webjars:stomp-websocket:2.3.4'
    // gson
    implementation 'com.google.code.gson:gson:2.9.0'
    // 레디스
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    // JSON을 키값으로 가져오기 위한 세팅
    // https://mvnrepository.com/artifact/org.json/json
    implementation group: 'org.json', name: 'json', version: '20220320'
    //swager
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
    // 캐시설정
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'net.sf.ehcache:ehcache:2.10.3'

    // MySql 추가
    // https://mvnrepository.com/artifact/com.mysql/mysql-connector-j
    // implementation 'mysql:mysql-connector-java'
    implementation 'mysql:mysql-connector-java:8.0.32'

    // 이메일 전송
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    compile group: 'javax.mail', name: 'mail', version: '1.4.7'

    compileOnly 'org.projectlombok:lombok'
    compileOnly group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

    //✨AWS RDS에 세팅된 MySQL에 접속시 주석하기
    // runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testCompileOnly 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
    useJUnitPlatform()
}
//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
//querydsl 추가 끝

// 배포 설정
jar {
    enabled = false
}